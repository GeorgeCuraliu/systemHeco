2023-07-29 16:10:05: notAnEndPoint029
2023-07-29 16:10:05: Server is running on http://localhost:3000
2023-07-29 16:11:01: notAnEndPoint029
2023-07-29 16:11:01: Server is running on http://localhost:3000
2023-07-29 16:11:57: notAnEndPoint029
2023-07-29 16:11:57: Server is running on http://localhost:3000
2023-07-29 16:22:32: notAnEndPoint029
2023-07-29 16:22:32: Server is running on http://localhost:3000
2023-07-29 16:23:32: notAnEndPoint029
2023-07-29 16:23:32: Server is running on http://localhost:3000
2023-07-29 16:23:56: notAnEndPoint029
2023-07-29 16:23:56: Server is running on http://localhost:3000
2023-07-29 16:25:13: notAnEndPoint029
2023-07-29 16:25:13: Server is running on http://localhost:3000
2023-07-29 16:25:53: notAnEndPoint029
2023-07-29 16:25:53: Server is running on http://localhost:3000
2023-07-29 16:26:25: notAnEndPoint029
2023-07-29 16:26:25: Server is running on http://localhost:3000
2023-07-29 16:26:43: notAnEndPoint029
2023-07-29 16:26:43: Server is running on http://localhost:3000
2023-07-29 16:26:55: notAnEndPoint029
2023-07-29 16:26:55: Server is running on http://localhost:3000
2023-07-29 16:28:31: notAnEndPoint029
2023-07-29 16:28:31: Server is running on http://localhost:3000
2023-07-29 16:32:10: notAnEndPoint029
2023-07-29 16:32:10: Server is running on http://localhost:3000
2023-07-29 16:39:47: Closing all connections...
2023-07-29 16:39:49: Finished closing connections
2023-07-29 16:39:57: notAnEndPoint029
2023-07-29 16:39:57: Server is running on http://localhost:3000
2023-07-29 16:41:05: Closing all connections...
2023-07-29 16:41:07: Finished closing connections
2023-07-29 16:42:18: notAnEndPoint029
2023-07-29 16:42:18: Server is running on http://localhost:3000
2023-07-29 16:42:37: Closing all connections...
2023-07-29 16:42:39: Finished closing connections
2023-07-29 16:43:45: notAnEndPoint029
2023-07-29 16:43:45: Server is running on http://localhost:3000
2023-07-29 16:58:40: Closing all connections...
2023-07-29 16:58:41: Finished closing connections
2023-07-29 16:58:42: notAnEndPoint029
2023-07-29 16:58:42: Server is running on http://localhost:3000
2023-07-29 17:09:07: notAnEndPoint029
2023-07-29 17:09:07: Server is running on http://localhost:3000
2023-07-29 17:09:39: Closing all connections...
2023-07-29 17:09:39: Error sending email: Error: Invalid login: 535-5.7.8 Username and Password not accepted. Learn more at
2023-07-29 17:09:39: 535 5.7.8  https://support.google.com/mail/?p=BadCredentials p15-20020a056000018f00b0030ae53550f5sm7547230wrx.51 - gsmtp
2023-07-29 17:09:39:     at SMTPConnection._formatError (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:790:19)
2023-07-29 17:09:39:     at SMTPConnection._actionAUTHComplete (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:1564:34)
2023-07-29 17:09:39:     at SMTPConnection.<anonymous> (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:546:26)
2023-07-29 17:09:39:     at SMTPConnection._processResponse (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:969:20)
2023-07-29 17:09:39:     at SMTPConnection._onData (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:755:14)
2023-07-29 17:09:39:     at SMTPConnection._onSocketData (D:\systemHeco\server\node_modules\nodemailer\lib\smtp-connection\index.js:193:44)
2023-07-29 17:09:39:     at TLSSocket.emit (node:events:513:28)
2023-07-29 17:09:39:     at addChunk (node:internal/streams/readable:324:12)
2023-07-29 17:09:39:     at readableAddChunk (node:internal/streams/readable:297:9)
2023-07-29 17:09:39:     at Readable.push (node:internal/streams/readable:234:10) {
2023-07-29 17:09:39:   code: 'EAUTH',
2023-07-29 17:09:39:   response: '535-5.7.8 Username and Password not accepted. Learn more at\n' +
2023-07-29 17:09:39:     '535 5.7.8  https://support.google.com/mail/?p=BadCredentials p15-20020a056000018f00b0030ae53550f5sm7547230wrx.51 - gsmtp',
2023-07-29 17:09:39:   responseCode: 535,
2023-07-29 17:09:39:   command: 'AUTH PLAIN'
2023-07-29 17:09:39: }
2023-07-29 18:50:36: notAnEndPoint029
2023-07-29 18:50:36: Server is running on http://localhost:3000
2023-07-29 18:50:45: Closing all connections...
2023-07-29 18:50:46: Error sending email: [Error: Unauthorized] {
2023-07-29 18:50:46:   status: 401,
2023-07-29 18:50:46:   details: 'Forbidden',
2023-07-29 18:50:46:   type: 'MailgunAPIError'
2023-07-29 18:50:46: }
2023-07-29 18:54:00: notAnEndPoint029
2023-07-29 18:54:00: Server is running on http://localhost:3000
2023-07-29 18:54:08: Closing all connections...
2023-07-29 18:54:08: Error sending email: [Error: Unauthorized] {
2023-07-29 18:54:08:   status: 401,
2023-07-29 18:54:08:   details: 'Forbidden',
2023-07-29 18:54:08:   type: 'MailgunAPIError'
2023-07-29 18:54:08: }
2023-07-29 19:04:52: notAnEndPoint029
2023-07-29 19:04:52: Server is running on http://localhost:3000
2023-07-29 19:05:01: Closing all connections...
2023-07-29 19:05:02: [Error: Unauthorized] {
2023-07-29 19:05:02:   status: 401,
2023-07-29 19:05:02:   details: 'Forbidden',
2023-07-29 19:05:02:   type: 'MailgunAPIError'
2023-07-29 19:05:02: }
2023-07-29 19:28:01: notAnEndPoint029
2023-07-29 19:28:01: Server is running on http://localhost:3000
2023-07-29 19:28:11: Closing all connections...
2023-07-29 19:28:12: [Error: Unauthorized] {
2023-07-29 19:28:12:   status: 401,
2023-07-29 19:28:12:   details: 'Forbidden',
2023-07-29 19:28:12:   type: 'MailgunAPIError'
2023-07-29 19:28:12: }
2023-07-29 19:35:52: notAnEndPoint029
2023-07-29 19:35:52: Server is running on http://localhost:3000
2023-07-29 19:35:58: Closing all connections...
2023-07-29 19:35:59: [Error: Forbidden] {
2023-07-29 19:35:59:   status: 403,
2023-07-29 19:35:59:   details: 'Domain sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org is not allowed to send: Free accounts are for test purposes only. Please upgrade or add the address to authorized recipients in Account Settings.',
2023-07-29 19:35:59:   type: 'MailgunAPIError'
2023-07-29 19:35:59: }
2023-07-29 19:37:36: notAnEndPoint029
2023-07-29 19:37:36: Server is running on http://localhost:3000
2023-07-29 19:37:46: Closing all connections...
2023-07-29 19:37:46: [Error: Unauthorized] {
2023-07-29 19:37:46:   status: 401,
2023-07-29 19:37:46:   details: 'Forbidden',
2023-07-29 19:37:46:   type: 'MailgunAPIError'
2023-07-29 19:37:46: }
2023-07-29 19:46:09: notAnEndPoint029
2023-07-29 19:46:09: Server is running on http://localhost:3000
2023-07-29 19:46:18: Closing all connections...
2023-07-29 19:46:18: [Error: Forbidden] {
2023-07-29 19:46:18:   status: 403,
2023-07-29 19:46:18:   details: 'Domain sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org is not allowed to send: Free accounts are for test purposes only. Please upgrade or add the address to authorized recipients in Account Settings.',
2023-07-29 19:46:18:   type: 'MailgunAPIError'
2023-07-29 19:46:18: }
2023-07-29 19:48:40: notAnEndPoint029
2023-07-29 19:48:40: Server is running on http://localhost:3000
2023-07-29 19:49:36: Closing all connections...
2023-07-29 19:49:36: [Error: Forbidden] {
2023-07-29 19:49:36:   status: 403,
2023-07-29 19:49:36:   details: 'Domain sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org is not allowed to send: Free accounts are for test purposes only. Please upgrade or add the address to authorized recipients in Account Settings.',
2023-07-29 19:49:36:   type: 'MailgunAPIError'
2023-07-29 19:49:36: }
2023-07-29 19:51:20: notAnEndPoint029
2023-07-29 19:51:20: Server is running on http://localhost:3000
2023-07-29 19:51:26: Closing all connections...
2023-07-29 19:51:27: [Error: Forbidden] {
2023-07-29 19:51:27:   status: 403,
2023-07-29 19:51:27:   details: 'Domain sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org is not allowed to send: Free accounts are for test purposes only. Please upgrade or add the address to authorized recipients in Account Settings.',
2023-07-29 19:51:27:   type: 'MailgunAPIError'
2023-07-29 19:51:27: }
2023-07-29 20:08:15: notAnEndPoint029
2023-07-29 20:08:15: Server is running on http://localhost:3000
2023-07-29 20:08:22: Closing all connections...
2023-07-29 20:08:23: {
2023-07-29 20:08:23:   status: 200,
2023-07-29 20:08:23:   id: '<20230729170824.bdcd310ecb986bb7@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-29 20:08:23:   message: 'Queued. Thank you.'
2023-07-29 20:08:23: }
2023-07-29 20:13:55: notAnEndPoint029
2023-07-29 20:13:55: Server is running on http://localhost:3000
2023-07-29 20:14:14: Closing all connections...
2023-07-29 20:14:14: {
2023-07-29 20:14:14:   status: 200,
2023-07-29 20:14:14:   id: '<20230729171416.eaaf048d49f7e9a1@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-29 20:14:14:   message: 'Queued. Thank you.'
2023-07-29 20:14:14: }
2023-07-29 23:13:58: notAnEndPoint029
2023-07-29 23:13:58: Server is running on http://localhost:3000
2023-07-29 23:14:12: Closing all connections...
2023-07-29 23:14:51: notAnEndPoint029
2023-07-29 23:14:51: Server is running on http://localhost:3000
2023-07-29 23:14:59: Closing all connections...
2023-07-29 23:21:17: notAnEndPoint029
2023-07-29 23:21:17: Server is running on http://localhost:3000
2023-07-29 23:21:17: some criticial error happened
2023-07-29 23:21:38: Closing all connections...
2023-07-29 23:21:38: notAnEndPoint029
2023-07-29 23:21:38: Server is running on http://localhost:3000
2023-07-29 23:21:38: PrismaClientInitializationError: 
2023-07-29 23:21:38: Invalid `prisma.user.create()` invocation in
2023-07-29 23:21:38: D:\systemHeco\test-server\server0.js:51:34
2023-07-29 23:21:38: 
2023-07-29 23:21:38:   48 
2023-07-29 23:21:38:   49 
2023-07-29 23:21:38:   50 const main = async () => {
2023-07-29 23:21:38: â†’ 51   const user = await prisma.user.create(
2023-07-29 23:21:38: error: Error validating datasource `db`: the URL must start with the protocol `file:`.
2023-07-29 23:21:38:   -->  schema.prisma:10
2023-07-29 23:21:38:    | 
2023-07-29 23:21:38:  9 |   provider = "sqlite"
2023-07-29 23:21:38: 10 |   url      = env("DATABASE_URL")
2023-07-29 23:21:38:    | 
2023-07-29 23:21:38: 
2023-07-29 23:21:38: Validation Error Count: 1
2023-07-29 23:21:38:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8581)
2023-07-29 23:21:38:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-29 23:21:38:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307)
2023-07-29 23:21:38:     at async main (D:\systemHeco\test-server\server0.js:51:16) {
2023-07-29 23:21:38:   clientVersion: '5.0.0',
2023-07-29 23:21:38:   errorCode: undefined
2023-07-29 23:21:38: }
2023-07-29 23:22:18: Closing all connections...
2023-07-29 23:22:18: notAnEndPoint029
2023-07-29 23:22:18: Server is running on http://localhost:3000
2023-07-29 23:22:18: PrismaClientKnownRequestError: 
2023-07-29 23:22:18: Invalid `prisma.user.create()` invocation in
2023-07-29 23:22:18: D:\systemHeco\test-server\server0.js:51:34
2023-07-29 23:22:18: 
2023-07-29 23:22:18:   48 
2023-07-29 23:22:18:   49 
2023-07-29 23:22:18:   50 const main = async () => {
2023-07-29 23:22:18: â†’ 51   const user = await prisma.user.create(
2023-07-29 23:22:18: The table `main.User` does not exist in the current database.
2023-07-29 23:22:18:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-29 23:22:18:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-29 23:22:18:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307)
2023-07-29 23:22:18:     at async main (D:\systemHeco\test-server\server0.js:51:16) {
2023-07-29 23:22:18:   code: 'P2021',
2023-07-29 23:22:18:   clientVersion: '5.0.0',
2023-07-29 23:22:18:   meta: { table: 'main.User' }
2023-07-29 23:22:18: }
2023-07-29 23:23:37: Closing all connections...
2023-07-29 23:23:38: notAnEndPoint029
2023-07-29 23:23:38: Server is running on http://localhost:3000
2023-07-29 23:23:38: PrismaClientKnownRequestError: 
2023-07-29 23:23:38: Invalid `prisma.user.create()` invocation in
2023-07-29 23:23:38: D:\systemHeco\test-server\server0.js:51:34
2023-07-29 23:23:38: 
2023-07-29 23:23:38:   48 
2023-07-29 23:23:38:   49 
2023-07-29 23:23:38:   50 const main = async () => {
2023-07-29 23:23:38: â†’ 51   const user = await prisma.user.create(
2023-07-29 23:23:38: The table `main.User` does not exist in the current database.
2023-07-29 23:23:38:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-29 23:23:38:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-29 23:23:38:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307)
2023-07-29 23:23:38:     at async main (D:\systemHeco\test-server\server0.js:51:16) {
2023-07-29 23:23:38:   code: 'P2021',
2023-07-29 23:23:38:   clientVersion: '5.0.0',
2023-07-29 23:23:38:   meta: { table: 'main.User' }
2023-07-29 23:23:38: }
2023-07-30 11:44:58: Closing all connections...
2023-07-30 11:45:06: notAnEndPoint029
2023-07-30 11:45:06: Server is running on http://localhost:3000
2023-07-30 11:45:07: PrismaClientKnownRequestError: 
2023-07-30 11:45:07: Invalid `prisma.user.create()` invocation in
2023-07-30 11:45:07: D:\systemHeco\test-server\server0.js:51:34
2023-07-30 11:45:07: 
2023-07-30 11:45:07:   48 
2023-07-30 11:45:07:   49 
2023-07-30 11:45:07:   50 const main = async () => {
2023-07-30 11:45:07: â†’ 51   const user = await prisma.user.create(
2023-07-30 11:45:07: The table `main.User` does not exist in the current database.
2023-07-30 11:45:07:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 11:45:07:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 11:45:07:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307)
2023-07-30 11:45:07:     at async main (D:\systemHeco\test-server\server0.js:51:16) {
2023-07-30 11:45:07:   code: 'P2021',
2023-07-30 11:45:07:   clientVersion: '5.0.0',
2023-07-30 11:45:07:   meta: { table: 'main.User' }
2023-07-30 11:45:07: }
2023-07-30 11:46:39: Closing all connections...
2023-07-30 11:46:50: notAnEndPoint029
2023-07-30 11:46:50: Server is running on http://localhost:3000
2023-07-30 11:46:50: PrismaClientKnownRequestError: 
2023-07-30 11:46:50: Invalid `prisma.user.create()` invocation in
2023-07-30 11:46:50: D:\systemHeco\test-server\server0.js:51:34
2023-07-30 11:46:50: 
2023-07-30 11:46:50:   48 
2023-07-30 11:46:50:   49 
2023-07-30 11:46:50:   50 const main = async () => {
2023-07-30 11:46:50: â†’ 51   const user = await prisma.user.create(
2023-07-30 11:46:50: The table `main.User` does not exist in the current database.
2023-07-30 11:46:50:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 11:46:50:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 11:46:50:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307)
2023-07-30 11:46:50:     at async main (D:\systemHeco\test-server\server0.js:51:16) {
2023-07-30 11:46:50:   code: 'P2021',
2023-07-30 11:46:50:   clientVersion: '5.0.0',
2023-07-30 11:46:50:   meta: { table: 'main.User' }
2023-07-30 11:46:50: }
2023-07-30 11:48:13: Closing all connections...
2023-07-30 11:48:14: notAnEndPoint029
2023-07-30 11:48:14: Server is running on http://localhost:3000
2023-07-30 11:48:15: { name: 'kyle', likedNumber: 23 }
2023-07-30 11:51:52: Closing all connections...
2023-07-30 11:51:52: notAnEndPoint029
2023-07-30 11:51:52: Server is running on http://localhost:3000
2023-07-30 11:51:53: { name: 'kyle', likedNumber: 23 }
2023-07-30 14:40:34: Closing all connections...
2023-07-30 14:40:35: notAnEndPoint029
2023-07-30 14:40:35: Server is running on http://localhost:3000
2023-07-30 14:40:35: { name: 'kyle', likedNumber: 23 }
2023-07-30 14:42:52: Closing all connections...
2023-07-30 14:42:53: notAnEndPoint029
2023-07-30 14:42:53: Server is running on http://localhost:3000
2023-07-30 14:42:53: TypeError: prisma.user.findUniques is not a function
2023-07-30 14:42:53:     at main (D:\systemHeco\test-server\server0.js:53:34)
2023-07-30 14:42:53:     at Object.<anonymous> (D:\systemHeco\test-server\server0.js:59:1)
2023-07-30 14:42:53:     at Module._compile (node:internal/modules/cjs/loader:1254:14)
2023-07-30 14:42:53:     at Module._extensions..js (node:internal/modules/cjs/loader:1308:10)
2023-07-30 14:42:53:     at Module.load (node:internal/modules/cjs/loader:1117:32)
2023-07-30 14:42:53:     at Module._load (node:internal/modules/cjs/loader:958:12)
2023-07-30 14:42:53:     at Object.<anonymous> (D:\systemHeco\test-server\node_modules\pm2\lib\ProcessContainerFork.js:33:23)
2023-07-30 14:42:53:     at Module._compile (node:internal/modules/cjs/loader:1254:14)
2023-07-30 14:42:53:     at Module._extensions..js (node:internal/modules/cjs/loader:1308:10)
2023-07-30 14:42:53:     at Module.load (node:internal/modules/cjs/loader:1117:32)
2023-07-30 14:43:09: Closing all connections...
2023-07-30 14:43:10: notAnEndPoint029
2023-07-30 14:43:10: Server is running on http://localhost:3000
2023-07-30 14:43:10: { name: 'kyle', likedNumber: 23 }
2023-07-30 15:35:56: Closing all connections...
2023-07-30 15:35:57: notAnEndPoint029
2023-07-30 15:35:57: Server is running on http://localhost:3000
2023-07-30 15:35:57: { name: 'kyle', likedNumber: 23 }
2023-07-30 15:36:10: Closing all connections...
2023-07-30 15:36:11: notAnEndPoint029
2023-07-30 15:36:11: Server is running on http://localhost:3000
2023-07-30 15:36:11: { name: 'kyle', likedNumber: 23 }
2023-07-30 15:43:03: Closing all connections...
2023-07-30 15:43:04: notAnEndPoint029
2023-07-30 15:43:04: Server is running on http://localhost:3000
2023-07-30 15:43:04: { name: 'vasily', likedNumber: 23 }
2023-07-30 15:44:37: Closing all connections...
2023-07-30 15:44:38: notAnEndPoint029
2023-07-30 15:44:38: Server is running on http://localhost:3000
2023-07-30 15:44:39: { name: 'vasily', likedNumber: 23 }
2023-07-30 15:46:06: Closing all connections...
2023-07-30 15:46:07: notAnEndPoint029
2023-07-30 15:46:07: Server is running on http://localhost:3000
2023-07-30 15:46:08: { name: 'kyle', likedNumber: 23 }
2023-07-30 15:50:03: Closing all connections...
2023-07-30 15:50:04: notAnEndPoint029
2023-07-30 15:50:04: Server is running on http://localhost:3000
2023-07-30 18:01:10: Closing all connections...
2023-07-30 18:01:14: notAnEndPoint029
2023-07-30 18:01:14: Server is running on http://localhost:3000
2023-07-30 18:01:18: notAnEndPoint029
2023-07-30 18:01:18: Server is running on http://localhost:3000
2023-07-30 18:01:22: notAnEndPoint029
2023-07-30 18:01:22: Server is running on http://localhost:3000
2023-07-30 18:01:25: notAnEndPoint029
2023-07-30 18:01:25: Server is running on http://localhost:3000
2023-07-30 18:01:29: notAnEndPoint029
2023-07-30 18:01:29: Server is running on http://localhost:3000
2023-07-30 18:01:31: Closing all connections...
2023-07-30 18:01:31: notAnEndPoint029
2023-07-30 18:01:31: Server is running on http://localhost:3000
2023-07-30 19:31:27: Closing all connections...
2023-07-30 19:31:32: notAnEndPoint029
2023-07-30 19:31:32: Server is running on http://localhost:3000
2023-07-30 19:31:34: some processing thing here
2023-07-30 19:31:36: server admin alerted about the error
2023-07-30 19:33:58: Closing all connections...
2023-07-30 19:33:59: notAnEndPoint029
2023-07-30 19:33:59: Server is running on http://localhost:3000
2023-07-30 19:34:06: some processing thing here
2023-07-30 19:34:06: PrismaClientKnownRequestError: 
2023-07-30 19:34:06: Invalid `prisma.user.create()` invocation in
2023-07-30 19:34:06: D:\systemHeco\test-server\server0.js:41:15
2023-07-30 19:34:06: 
2023-07-30 19:34:06:   38 
2023-07-30 19:34:06:   39 console.log("some processing thing here");
2023-07-30 19:34:06:   40 
2023-07-30 19:34:06: â†’ 41 prisma.user.create(
2023-07-30 19:34:06: Unique constraint failed on the fields: (`name`)
2023-07-30 19:34:06:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 19:34:06:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 19:34:06:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307) {
2023-07-30 19:34:06:   code: 'P2002',
2023-07-30 19:34:06:   clientVersion: '5.0.0',
2023-07-30 19:34:06:   meta: { target: [ 'name' ] }
2023-07-30 19:34:06: }
2023-07-30 19:34:06: {
2023-07-30 19:34:06:   status: 200,
2023-07-30 19:34:06:   id: '<20230730163406.8c82aba66f42ce4c@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-30 19:34:06:   message: 'Queued. Thank you.'
2023-07-30 19:34:06: }
2023-07-30 19:35:18: some processing thing here
2023-07-30 19:35:19: {
2023-07-30 19:35:19:   status: 200,
2023-07-30 19:35:19:   id: '<20230730163519.61b0a4ca02c229d7@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-30 19:35:19:   message: 'Queued. Thank you.'
2023-07-30 19:35:19: }
2023-07-30 19:35:52: Closing all connections...
2023-07-30 19:35:53: notAnEndPoint029
2023-07-30 19:35:53: Server is running on http://localhost:3000
2023-07-30 19:36:07: Closing all connections...
2023-07-30 19:36:08: notAnEndPoint029
2023-07-30 19:36:08: Server is running on http://localhost:3000
2023-07-30 19:36:15: some processing thing here
2023-07-30 19:36:16: {
2023-07-30 19:36:16:   status: 200,
2023-07-30 19:36:16:   id: '<20230730163616.57f15be50f77c313@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-30 19:36:16:   message: 'Queued. Thank you.'
2023-07-30 19:36:16: }
2023-07-30 19:45:02: some processing thing here
2023-07-30 19:45:02: PrismaClientKnownRequestError: 
2023-07-30 19:45:02: Invalid `prisma.user.create()` invocation in
2023-07-30 19:45:02: D:\systemHeco\test-server\server0.js:41:15
2023-07-30 19:45:02: 
2023-07-30 19:45:02:   38 
2023-07-30 19:45:02:   39 console.log("some processing thing here");
2023-07-30 19:45:02:   40 
2023-07-30 19:45:02: â†’ 41 prisma.user.create(
2023-07-30 19:45:02: Unique constraint failed on the fields: (`name`)
2023-07-30 19:45:02:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 19:45:02:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 19:45:02:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307) {
2023-07-30 19:45:02:   code: 'P2002',
2023-07-30 19:45:02:   clientVersion: '5.0.0',
2023-07-30 19:45:02:   meta: { target: [ 'name' ] }
2023-07-30 19:45:02: }
2023-07-30 19:45:03: {
2023-07-30 19:45:03:   status: 200,
2023-07-30 19:45:03:   id: '<20230730164503.a4fb029b334edb59@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-30 19:45:03:   message: 'Queued. Thank you.'
2023-07-30 19:45:03: }
2023-07-30 21:24:32: some processing thing here
2023-07-30 21:24:32: PrismaClientKnownRequestError: 
2023-07-30 21:24:32: Invalid `prisma.user.create()` invocation:
2023-07-30 21:24:32: 
2023-07-30 21:24:32: 
2023-07-30 21:24:32: Unique constraint failed on the fields: (`name`)
2023-07-30 21:24:32:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 21:24:32:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 21:24:32:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307) {
2023-07-30 21:24:32:   code: 'P2002',
2023-07-30 21:24:32:   clientVersion: '5.0.0',
2023-07-30 21:24:32:   meta: { target: [ 'name' ] }
2023-07-30 21:24:32: }
2023-07-30 21:24:33: {
2023-07-30 21:24:33:   status: 200,
2023-07-30 21:24:33:   id: '<20230730182433.aade82c828dc0e46@sandboxcb81f52fe3684ab986b971bdeed0bfa6.mailgun.org>',
2023-07-30 21:24:33:   message: 'Queued. Thank you.'
2023-07-30 21:24:33: }
2023-07-30 21:25:08: Closing all connections...
2023-07-30 21:25:12: notAnEndPoint029
2023-07-30 21:25:12: Server is running on http://localhost:3000
2023-07-30 21:31:11: Closing all connections...
2023-07-30 21:31:12: notAnEndPoint029
2023-07-30 21:31:12: Server is running on http://localhost:3000
2023-07-30 21:40:38: Closing all connections...
2023-07-30 21:40:39: notAnEndPoint029
2023-07-30 21:40:39: Server is running on http://localhost:3000
2023-07-30 21:40:54: some processing thing here
2023-07-30 21:40:54: PrismaClientKnownRequestError: 
2023-07-30 21:40:54: Invalid `prisma.user.create()` invocation in
2023-07-30 21:40:54: D:\systemHeco\test-server\server0.js:85:15
2023-07-30 21:40:54: 
2023-07-30 21:40:54:   82 
2023-07-30 21:40:54:   83 console.log("some processing thing here");
2023-07-30 21:40:54:   84 
2023-07-30 21:40:54: â†’ 85 prisma.user.create(
2023-07-30 21:40:54: Unique constraint failed on the fields: (`name`)
2023-07-30 21:40:54:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 21:40:54:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 21:40:54:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307) {
2023-07-30 21:40:54:   code: 'P2002',
2023-07-30 21:40:54:   clientVersion: '5.0.0',
2023-07-30 21:40:54:   meta: { target: [ 'name' ] }
2023-07-30 21:40:54: }
2023-07-30 21:41:32: Closing all connections...
2023-07-30 21:41:33: notAnEndPoint029
2023-07-30 21:41:33: Server is running on http://localhost:3000
2023-07-30 21:41:34: some processing thing here
2023-07-30 21:41:34: PrismaClientKnownRequestError: 
2023-07-30 21:41:34: Invalid `prisma.user.create()` invocation in
2023-07-30 21:41:34: D:\systemHeco\test-server\server0.js:85:15
2023-07-30 21:41:34: 
2023-07-30 21:41:34:   82 
2023-07-30 21:41:34:   83 console.log("some processing thing here");
2023-07-30 21:41:34:   84 
2023-07-30 21:41:34: â†’ 85 prisma.user.create(
2023-07-30 21:41:34: Unique constraint failed on the fields: (`name`)
2023-07-30 21:41:34:     at zr.handleRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:8308)
2023-07-30 21:41:34:     at zr.handleAndLogRequestError (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7697)
2023-07-30 21:41:34:     at zr.request (D:\systemHeco\test-server\node_modules\@prisma\client\runtime\library.js:122:7307) {
2023-07-30 21:41:34:   code: 'P2002',
2023-07-30 21:41:34:   clientVersion: '5.0.0',
2023-07-30 21:41:34:   meta: { target: [ 'name' ] }
2023-07-30 21:41:34: }
2023-07-30 21:41:46: Closing all connections...
2023-07-30 21:41:46: notAnEndPoint029
2023-07-30 21:41:46: Server is running on http://localhost:3000
2023-07-30 21:43:15: Closing all connections...
2023-07-30 21:43:16: notAnEndPoint029
2023-07-30 21:43:16: Server is running on http://localhost:3000
2023-07-30 21:43:40: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MjYxOSwiZXhwIjoxNjkwNzQ2MjE5fQ.7SIjK6YMYw9aJscxJoxNj4C4nJCSqIbpEjBMpEWTEPM
2023-07-30 21:46:13: Closing all connections...
2023-07-30 21:46:14: notAnEndPoint029
2023-07-30 21:46:14: Server is running on http://localhost:3000
2023-07-30 21:46:20: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0Mjc4MCwiZXhwIjoxNjkwNzQ2MzgwfQ.AQuKH3c0bsdfpJST1-3Ld55fM03kf_7Y8p3V-2NMhVU
2023-07-30 21:47:05: Closing all connections...
2023-07-30 21:47:06: notAnEndPoint029
2023-07-30 21:47:06: Server is running on http://localhost:3000
2023-07-30 21:47:09: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MjgyOSwiZXhwIjoxNjkwNzQ2NDI5fQ.qb25_yGDyF4NJm2YcsBP5YNkmgMqbZ5K1mYF18Qd8L8
2023-07-30 21:48:33: Closing all connections...
2023-07-30 21:48:34: notAnEndPoint029
2023-07-30 21:48:34: Server is running on http://localhost:3000
2023-07-30 21:48:37: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MjkxNywiZXhwIjoxNjkwNzQ2NTE3fQ.KMEoynYHtTZ3S89FjJMhkbMUWtYBzlsR5J0msrQHYRU
2023-07-30 21:48:39: undefined
2023-07-30 21:52:55: Closing all connections...
2023-07-30 21:52:56: notAnEndPoint029
2023-07-30 21:52:56: Server is running on http://localhost:3000
2023-07-30 21:53:05: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MzE4NSwiZXhwIjoxNjkwNzQ2Nzg1fQ.4_PYyC9cwyr4dMyzfHXNLOydjzYkfhhnzd6bJCNOS8M
2023-07-30 21:53:13: [Object: null prototype] {}
2023-07-30 21:53:13: undefined
2023-07-30 21:54:23: Closing all connections...
2023-07-30 21:54:24: notAnEndPoint029
2023-07-30 21:54:24: Server is running on http://localhost:3000
2023-07-30 21:54:31: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MzI3MSwiZXhwIjoxNjkwNzQ2ODcxfQ.Zf0rE8RUpPhZ2Llwuk8tXQkeA7RnDbQTM3PznMvtCvk
2023-07-30 21:55:26: undefined
2023-07-30 21:55:26: undefined
2023-07-30 22:00:16: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MzYxNiwiZXhwIjoxNjkwNzQ3MjE2fQ.A49FBtA_hapFJO4YEq62lX3-3p3dPpbXk60akJToCww
2023-07-30 22:00:42: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0MzY0MiwiZXhwIjoxNjkwNzQ3MjQyfQ.TSLYQRi1lGqUBkayLEuwA19-xnlLEsdYj5wyPv7zAQs
2023-07-30 22:22:12: Closing all connections...
2023-07-30 22:22:13: notAnEndPoint029
2023-07-30 22:22:13: Server is running on http://localhost:3000
2023-07-30 22:25:06: Closing all connections...
2023-07-30 22:25:07: notAnEndPoint029
2023-07-30 22:25:07: Server is running on http://localhost:3000
2023-07-30 22:25:36: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0NTEzNiwiZXhwIjoxNjkwNzQ4NzM2fQ.pp35hacRgljp2vRsFi8NcTSAkn_7pTrpsD_U0UKEvsg
2023-07-30 22:25:42: [Object: null prototype] {}
2023-07-30 22:34:29: Closing all connections...
2023-07-30 22:34:31: notAnEndPoint029
2023-07-30 22:34:31: Server is running on http://localhost:3000
2023-07-30 22:34:44: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0NTY4NCwiZXhwIjoxNjkwNzQ5Mjg0fQ.Eu7SmQ2iJSA5xQ3ey6KEp8NnF9jj9-uGC-dE7VnRJGM
2023-07-30 22:34:48: [Object: null prototype] {}
2023-07-30 22:35:12: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0NTcxMiwiZXhwIjoxNjkwNzQ5MzEyfQ.-aqqEDE3gSaHyYSQH1VzcWGQyyyy8cLGFih37-EaPVM
2023-07-30 22:35:12: Closing all connections...
2023-07-30 22:35:13: notAnEndPoint029
2023-07-30 22:35:13: Server is running on http://localhost:3000
2023-07-30 22:35:14: [Object: null prototype] {}
2023-07-30 22:35:34: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImRhd2RzZGF3ZCIsImlhdCI6MTY5MDc0NTczNCwiZXhwIjoxNjkwNzQ5MzM0fQ.UyYbHCIO7H_v0HiWsLdfXVtBnK7-wCbpZWE4v-FS1M4
2023-07-31 01:18:06: Closing all connections...
2023-07-31 01:18:07: notAnEndPoint029
2023-07-31 01:18:07: Server is running on http://localhost:3000
2023-07-31 01:18:33: Closing all connections...
2023-07-31 01:18:34: notAnEndPoint029
2023-07-31 01:18:34: Server is running on http://localhost:3000
2023-07-31 01:18:36: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6Im5hbWUiLCJpYXQiOjE2OTA3NTU1MTZ9.qoU_6i0dr2GFe2k-2AxAbDZOxTXOpfz7UIQ1VY37Qj8
2023-07-31 01:32:31: Closing all connections...
2023-07-31 01:32:32: notAnEndPoint029
2023-07-31 01:32:32: Server is running on http://localhost:3000
2023-07-31 01:39:29: Closing all connections...
2023-07-31 01:39:30: notAnEndPoint029
2023-07-31 01:39:30: Server is running on http://localhost:3000
2023-07-31 01:39:33: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1Njc3M30.egdzsAMnjm697boXD7pnKumAsDWtHk9jzK-_PtqHOrw
2023-07-31 01:40:38: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NjgzOH0.lSODR7lIEvUMnbd8pepdqfsgwydwS-_zawpBura1BUE
2023-07-31 01:42:36: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1Njk1Nn0.2ZCzOZBsWI7mrjgnnEW3fvK1Lke3HsdtZPxECPRv6Tg
2023-07-31 01:46:49: Closing all connections...
2023-07-31 01:46:50: notAnEndPoint029
2023-07-31 01:46:50: Server is running on http://localhost:3000
2023-07-31 01:46:54: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:46:54: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzIxNH0.uIZ0aVVh0yiWImAwpkeSm2xBn-8-EIV8BHNvggkCdHI
2023-07-31 01:46:58: <ref *2> IncomingMessage {
2023-07-31 01:46:58:   _readableState: ReadableState {
2023-07-31 01:46:58:     objectMode: false,
2023-07-31 01:46:58:     highWaterMark: 16384,
2023-07-31 01:46:58:     buffer: BufferList { head: null, tail: null, length: 0 },
2023-07-31 01:46:58:     length: 0,
2023-07-31 01:46:58:     pipes: [],
2023-07-31 01:46:58:     flowing: null,
2023-07-31 01:46:58:     ended: false,
2023-07-31 01:46:58:     endEmitted: false,
2023-07-31 01:46:58:     reading: false,
2023-07-31 01:46:58:     constructed: true,
2023-07-31 01:46:58:     sync: true,
2023-07-31 01:46:58:     needReadable: false,
2023-07-31 01:46:58:     emittedReadable: false,
2023-07-31 01:46:58:     readableListening: false,
2023-07-31 01:46:58:     resumeScheduled: false,
2023-07-31 01:46:58:     errorEmitted: false,
2023-07-31 01:46:58:     emitClose: true,
2023-07-31 01:46:58:     autoDestroy: true,
2023-07-31 01:46:58:     destroyed: false,
2023-07-31 01:46:58:     errored: null,
2023-07-31 01:46:58:     closed: false,
2023-07-31 01:46:58:     closeEmitted: false,
2023-07-31 01:46:58:     defaultEncoding: 'utf8',
2023-07-31 01:46:58:     awaitDrainWriters: null,
2023-07-31 01:46:58:     multiAwaitDrain: false,
2023-07-31 01:46:58:     readingMore: true,
2023-07-31 01:46:58:     dataEmitted: false,
2023-07-31 01:46:58:     decoder: null,
2023-07-31 01:46:58:     encoding: null,
2023-07-31 01:46:58:     [Symbol(kPaused)]: null
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   _events: [Object: null prototype] {},
2023-07-31 01:46:58:   _eventsCount: 0,
2023-07-31 01:46:58:   _maxListeners: undefined,
2023-07-31 01:46:58:   socket: <ref *1> Socket {
2023-07-31 01:46:58:     connecting: false,
2023-07-31 01:46:58:     _hadError: false,
2023-07-31 01:46:58:     _parent: null,
2023-07-31 01:46:58:     _host: null,
2023-07-31 01:46:58:     _closeAfterHandlingError: false,
2023-07-31 01:46:58:     _readableState: ReadableState {
2023-07-31 01:46:58:       objectMode: false,
2023-07-31 01:46:58:       highWaterMark: 16384,
2023-07-31 01:46:58:       buffer: BufferList { head: null, tail: null, length: 0 },
2023-07-31 01:46:58:       length: 0,
2023-07-31 01:46:58:       pipes: [],
2023-07-31 01:46:58:       flowing: true,
2023-07-31 01:46:58:       ended: false,
2023-07-31 01:46:58:       endEmitted: false,
2023-07-31 01:46:58:       reading: true,
2023-07-31 01:46:58:       constructed: true,
2023-07-31 01:46:58:       sync: false,
2023-07-31 01:46:58:       needReadable: true,
2023-07-31 01:46:58:       emittedReadable: false,
2023-07-31 01:46:58:       readableListening: false,
2023-07-31 01:46:58:       resumeScheduled: false,
2023-07-31 01:46:58:       errorEmitted: false,
2023-07-31 01:46:58:       emitClose: false,
2023-07-31 01:46:58:       autoDestroy: true,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       errored: null,
2023-07-31 01:46:58:       closed: false,
2023-07-31 01:46:58:       closeEmitted: false,
2023-07-31 01:46:58:       defaultEncoding: 'utf8',
2023-07-31 01:46:58:       awaitDrainWriters: null,
2023-07-31 01:46:58:       multiAwaitDrain: false,
2023-07-31 01:46:58:       readingMore: false,
2023-07-31 01:46:58:       dataEmitted: false,
2023-07-31 01:46:58:       decoder: null,
2023-07-31 01:46:58:       encoding: null,
2023-07-31 01:46:58:       [Symbol(kPaused)]: false
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _events: [Object: null prototype] {
2023-07-31 01:46:58:       end: [Array],
2023-07-31 01:46:58:       timeout: [Function: socketOnTimeout],
2023-07-31 01:46:58:       data: [Function: bound socketOnData],
2023-07-31 01:46:58:       error: [Function: socketOnError],
2023-07-31 01:46:58:       close: [Array],
2023-07-31 01:46:58:       drain: [Function: bound socketOnDrain],
2023-07-31 01:46:58:       resume: [Function: onSocketResume],
2023-07-31 01:46:58:       pause: [Function: onSocketPause]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _eventsCount: 8,
2023-07-31 01:46:58:     _maxListeners: undefined,
2023-07-31 01:46:58:     _writableState: WritableState {
2023-07-31 01:46:58:       objectMode: false,
2023-07-31 01:46:58:       highWaterMark: 16384,
2023-07-31 01:46:58:       finalCalled: false,
2023-07-31 01:46:58:       needDrain: false,
2023-07-31 01:46:58:       ending: false,
2023-07-31 01:46:58:       ended: false,
2023-07-31 01:46:58:       finished: false,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       decodeStrings: false,
2023-07-31 01:46:58:       defaultEncoding: 'utf8',
2023-07-31 01:46:58:       length: 0,
2023-07-31 01:46:58:       writing: false,
2023-07-31 01:46:58:       corked: 0,
2023-07-31 01:46:58:       sync: false,
2023-07-31 01:46:58:       bufferProcessing: false,
2023-07-31 01:46:58:       onwrite: [Function: bound onwrite],
2023-07-31 01:46:58:       writecb: null,
2023-07-31 01:46:58:       writelen: 0,
2023-07-31 01:46:58:       afterWriteTickInfo: null,
2023-07-31 01:46:58:       buffered: [],
2023-07-31 01:46:58:       bufferedIndex: 0,
2023-07-31 01:46:58:       allBuffers: true,
2023-07-31 01:46:58:       allNoop: true,
2023-07-31 01:46:58:       pendingcb: 0,
2023-07-31 01:46:58:       constructed: true,
2023-07-31 01:46:58:       prefinished: false,
2023-07-31 01:46:58:       errorEmitted: false,
2023-07-31 01:46:58:       emitClose: false,
2023-07-31 01:46:58:       autoDestroy: true,
2023-07-31 01:46:58:       errored: null,
2023-07-31 01:46:58:       closed: false,
2023-07-31 01:46:58:       closeEmitted: false,
2023-07-31 01:46:58:       [Symbol(kOnFinished)]: []
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     allowHalfOpen: true,
2023-07-31 01:46:58:     _sockname: null,
2023-07-31 01:46:58:     _pendingData: null,
2023-07-31 01:46:58:     _pendingEncoding: '',
2023-07-31 01:46:58:     server: Server {
2023-07-31 01:46:58:       maxHeaderSize: undefined,
2023-07-31 01:46:58:       insecureHTTPParser: undefined,
2023-07-31 01:46:58:       requestTimeout: 300000,
2023-07-31 01:46:58:       headersTimeout: 60000,
2023-07-31 01:46:58:       keepAliveTimeout: 5000,
2023-07-31 01:46:58:       connectionsCheckingInterval: 30000,
2023-07-31 01:46:58:       joinDuplicateHeaders: undefined,
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 2,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       _connections: 1,
2023-07-31 01:46:58:       _handle: [TCP],
2023-07-31 01:46:58:       _usingWorkers: false,
2023-07-31 01:46:58:       _workers: [],
2023-07-31 01:46:58:       _unref: false,
2023-07-31 01:46:58:       allowHalfOpen: true,
2023-07-31 01:46:58:       pauseOnConnect: false,
2023-07-31 01:46:58:       noDelay: true,
2023-07-31 01:46:58:       keepAlive: false,
2023-07-31 01:46:58:       keepAliveInitialDelay: 0,
2023-07-31 01:46:58:       httpAllowHalfOpen: false,
2023-07-31 01:46:58:       timeout: 0,
2023-07-31 01:46:58:       maxHeadersCount: null,
2023-07-31 01:46:58:       maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       _connectionKey: '6::::3000',
2023-07-31 01:46:58:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
2023-07-31 01:46:58:       [Symbol(ServerResponse)]: [Function: ServerResponse],
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(async_id_symbol)]: 33,
2023-07-31 01:46:58:       [Symbol(http.server.connections)]: ConnectionsList {},
2023-07-31 01:46:58:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
2023-07-31 01:46:58:         _idleTimeout: 30000,
2023-07-31 01:46:58:         _idlePrev: [TimersList],
2023-07-31 01:46:58:         _idleNext: [TimersList],
2023-07-31 01:46:58:         _idleStart: 937,
2023-07-31 01:46:58:         _onTimeout: [Function: bound checkConnections],
2023-07-31 01:46:58:         _timerArgs: undefined,
2023-07-31 01:46:58:         _repeat: 30000,
2023-07-31 01:46:58:         _destroyed: false,
2023-07-31 01:46:58:         [Symbol(refed)]: false,
2023-07-31 01:46:58:         [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:         [Symbol(asyncId)]: 32,
2023-07-31 01:46:58:         [Symbol(triggerId)]: 1
2023-07-31 01:46:58:       },
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _server: Server {
2023-07-31 01:46:58:       maxHeaderSize: undefined,
2023-07-31 01:46:58:       insecureHTTPParser: undefined,
2023-07-31 01:46:58:       requestTimeout: 300000,
2023-07-31 01:46:58:       headersTimeout: 60000,
2023-07-31 01:46:58:       keepAliveTimeout: 5000,
2023-07-31 01:46:58:       connectionsCheckingInterval: 30000,
2023-07-31 01:46:58:       joinDuplicateHeaders: undefined,
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 2,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       _connections: 1,
2023-07-31 01:46:58:       _handle: [TCP],
2023-07-31 01:46:58:       _usingWorkers: false,
2023-07-31 01:46:58:       _workers: [],
2023-07-31 01:46:58:       _unref: false,
2023-07-31 01:46:58:       allowHalfOpen: true,
2023-07-31 01:46:58:       pauseOnConnect: false,
2023-07-31 01:46:58:       noDelay: true,
2023-07-31 01:46:58:       keepAlive: false,
2023-07-31 01:46:58:       keepAliveInitialDelay: 0,
2023-07-31 01:46:58:       httpAllowHalfOpen: false,
2023-07-31 01:46:58:       timeout: 0,
2023-07-31 01:46:58:       maxHeadersCount: null,
2023-07-31 01:46:58:       maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       _connectionKey: '6::::3000',
2023-07-31 01:46:58:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
2023-07-31 01:46:58:       [Symbol(ServerResponse)]: [Function: ServerResponse],
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(async_id_symbol)]: 33,
2023-07-31 01:46:58:       [Symbol(http.server.connections)]: ConnectionsList {},
2023-07-31 01:46:58:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
2023-07-31 01:46:58:         _idleTimeout: 30000,
2023-07-31 01:46:58:         _idlePrev: [TimersList],
2023-07-31 01:46:58:         _idleNext: [TimersList],
2023-07-31 01:46:58:         _idleStart: 937,
2023-07-31 01:46:58:         _onTimeout: [Function: bound checkConnections],
2023-07-31 01:46:58:         _timerArgs: undefined,
2023-07-31 01:46:58:         _repeat: 30000,
2023-07-31 01:46:58:         _destroyed: false,
2023-07-31 01:46:58:         [Symbol(refed)]: false,
2023-07-31 01:46:58:         [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:         [Symbol(asyncId)]: 32,
2023-07-31 01:46:58:         [Symbol(triggerId)]: 1
2023-07-31 01:46:58:       },
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     parser: HTTPParser {
2023-07-31 01:46:58:       '0': null,
2023-07-31 01:46:58:       '1': [Function: parserOnHeaders],
2023-07-31 01:46:58:       '2': [Function: parserOnHeadersComplete],
2023-07-31 01:46:58:       '3': [Function: parserOnBody],
2023-07-31 01:46:58:       '4': [Function: parserOnMessageComplete],
2023-07-31 01:46:58:       '5': [Function: bound onParserExecute],
2023-07-31 01:46:58:       '6': [Function: bound onParserTimeout],
2023-07-31 01:46:58:       _headers: [],
2023-07-31 01:46:58:       _url: '',
2023-07-31 01:46:58:       socket: [Circular *1],
2023-07-31 01:46:58:       incoming: [Circular *2],
2023-07-31 01:46:58:       outgoing: null,
2023-07-31 01:46:58:       maxHeaderPairs: 2000,
2023-07-31 01:46:58:       _consumed: true,
2023-07-31 01:46:58:       onIncoming: [Function: bound parserOnIncoming],
2023-07-31 01:46:58:       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     on: [Function: socketListenerWrap],
2023-07-31 01:46:58:     addListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:     prependListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:     setEncoding: [Function: socketSetEncoding],
2023-07-31 01:46:58:     _paused: false,
2023-07-31 01:46:58:     _httpMessage: ServerResponse {
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 1,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       outputData: [],
2023-07-31 01:46:58:       outputSize: 0,
2023-07-31 01:46:58:       writable: true,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       _last: false,
2023-07-31 01:46:58:       chunkedEncoding: false,
2023-07-31 01:46:58:       shouldKeepAlive: true,
2023-07-31 01:46:58:       maxRequestsOnConnectionReached: false,
2023-07-31 01:46:58:       _defaultKeepAlive: true,
2023-07-31 01:46:58:       useChunkedEncodingByDefault: true,
2023-07-31 01:46:58:       sendDate: true,
2023-07-31 01:46:58:       _removedConnection: false,
2023-07-31 01:46:58:       _removedContLen: false,
2023-07-31 01:46:58:       _removedTE: false,
2023-07-31 01:46:58:       strictContentLength: false,
2023-07-31 01:46:58:       _contentLength: null,
2023-07-31 01:46:58:       _hasBody: true,
2023-07-31 01:46:58:       _trailer: '',
2023-07-31 01:46:58:       finished: false,
2023-07-31 01:46:58:       _headerSent: false,
2023-07-31 01:46:58:       _closed: false,
2023-07-31 01:46:58:       socket: [Circular *1],
2023-07-31 01:46:58:       _header: null,
2023-07-31 01:46:58:       _keepAliveTimeout: 5000,
2023-07-31 01:46:58:       _onPendingData: [Function: bound updateOutgoingData],
2023-07-31 01:46:58:       req: [Circular *2],
2023-07-31 01:46:58:       _sent100: false,
2023-07-31 01:46:58:       _expect_continue: false,
2023-07-31 01:46:58:       _maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       locals: [Object: null prototype] {},
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(kBytesWritten)]: 0,
2023-07-31 01:46:58:       [Symbol(kNeedDrain)]: false,
2023-07-31 01:46:58:       [Symbol(corked)]: 0,
2023-07-31 01:46:58:       [Symbol(kOutHeaders)]: [Object: null prototype],
2023-07-31 01:46:58:       [Symbol(errored)]: null,
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     timeout: 0,
2023-07-31 01:46:58:     [Symbol(async_id_symbol)]: 45,
2023-07-31 01:46:58:     [Symbol(kHandle)]: TCP {
2023-07-31 01:46:58:       reading: true,
2023-07-31 01:46:58:       onconnection: null,
2023-07-31 01:46:58:       _consumed: true,
2023-07-31 01:46:58:       [Symbol(owner_symbol)]: [Circular *1]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     [Symbol(lastWriteQueueSize)]: 0,
2023-07-31 01:46:58:     [Symbol(timeout)]: Timeout {
2023-07-31 01:46:58:       _idleTimeout: -1,
2023-07-31 01:46:58:       _idlePrev: null,
2023-07-31 01:46:58:       _idleNext: null,
2023-07-31 01:46:58:       _idleStart: 4232,
2023-07-31 01:46:58:       _onTimeout: null,
2023-07-31 01:46:58:       _timerArgs: undefined,
2023-07-31 01:46:58:       _repeat: null,
2023-07-31 01:46:58:       _destroyed: true,
2023-07-31 01:46:58:       [Symbol(refed)]: false,
2023-07-31 01:46:58:       [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:       [Symbol(asyncId)]: 71,
2023-07-31 01:46:58:       [Symbol(triggerId)]: 68
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     [Symbol(kBuffer)]: null,
2023-07-31 01:46:58:     [Symbol(kBufferCb)]: null,
2023-07-31 01:46:58:     [Symbol(kBufferGen)]: null,
2023-07-31 01:46:58:     [Symbol(kCapture)]: false,
2023-07-31 01:46:58:     [Symbol(kSetNoDelay)]: true,
2023-07-31 01:46:58:     [Symbol(kSetKeepAlive)]: false,
2023-07-31 01:46:58:     [Symbol(kSetKeepAliveInitialDelay)]: 0,
2023-07-31 01:46:58:     [Symbol(kBytesRead)]: 0,
2023-07-31 01:46:58:     [Symbol(kBytesWritten)]: 0
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   httpVersionMajor: 1,
2023-07-31 01:46:58:   httpVersionMinor: 1,
2023-07-31 01:46:58:   httpVersion: '1.1',
2023-07-31 01:46:58:   complete: false,
2023-07-31 01:46:58:   rawHeaders: [
2023-07-31 01:46:58:     'Host',
2023-07-31 01:46:58:     'localhost:3000',
2023-07-31 01:46:58:     'Connection',
2023-07-31 01:46:58:     'keep-alive',
2023-07-31 01:46:58:     'sec-ch-ua',
2023-07-31 01:46:58:     '"Not.A/Brand";v="8", "Chromium";v="114", "Opera";v="100"',
2023-07-31 01:46:58:     'Accept',
2023-07-31 01:46:58:     'application/json, text/plain, */*',
2023-07-31 01:46:58:     'sec-ch-ua-mobile',
2023-07-31 01:46:58:     '?0',
2023-07-31 01:46:58:     'User-Agent',
2023-07-31 01:46:58:     'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 OPR/100.0.0.0',
2023-07-31 01:46:58:     'sec-ch-ua-platform',
2023-07-31 01:46:58:     '"Windows"',
2023-07-31 01:46:58:     'Origin',
2023-07-31 01:46:58:     'http://localhost:3001',
2023-07-31 01:46:58:     'Sec-Fetch-Site',
2023-07-31 01:46:58:     'same-site',
2023-07-31 01:46:58:     'Sec-Fetch-Mode',
2023-07-31 01:46:58:     'cors',
2023-07-31 01:46:58:     'Sec-Fetch-Dest',
2023-07-31 01:46:58:     'empty',
2023-07-31 01:46:58:     'Referer',
2023-07-31 01:46:58:     'http://localhost:3001/',
2023-07-31 01:46:58:     'Accept-Encoding',
2023-07-31 01:46:58:     'gzip, deflate, br',
2023-07-31 01:46:58:     'Accept-Language',
2023-07-31 01:46:58:     'en-US,en;q=0.9'
2023-07-31 01:46:58:   ],
2023-07-31 01:46:58:   rawTrailers: [],
2023-07-31 01:46:58:   joinDuplicateHeaders: undefined,
2023-07-31 01:46:58:   aborted: false,
2023-07-31 01:46:58:   upgrade: false,
2023-07-31 01:46:58:   url: '/protected',
2023-07-31 01:46:58:   method: 'GET',
2023-07-31 01:46:58:   statusCode: null,
2023-07-31 01:46:58:   statusMessage: null,
2023-07-31 01:46:58:   client: <ref *1> Socket {
2023-07-31 01:46:58:     connecting: false,
2023-07-31 01:46:58:     _hadError: false,
2023-07-31 01:46:58:     _parent: null,
2023-07-31 01:46:58:     _host: null,
2023-07-31 01:46:58:     _closeAfterHandlingError: false,
2023-07-31 01:46:58:     _readableState: ReadableState {
2023-07-31 01:46:58:       objectMode: false,
2023-07-31 01:46:58:       highWaterMark: 16384,
2023-07-31 01:46:58:       buffer: BufferList { head: null, tail: null, length: 0 },
2023-07-31 01:46:58:       length: 0,
2023-07-31 01:46:58:       pipes: [],
2023-07-31 01:46:58:       flowing: true,
2023-07-31 01:46:58:       ended: false,
2023-07-31 01:46:58:       endEmitted: false,
2023-07-31 01:46:58:       reading: true,
2023-07-31 01:46:58:       constructed: true,
2023-07-31 01:46:58:       sync: false,
2023-07-31 01:46:58:       needReadable: true,
2023-07-31 01:46:58:       emittedReadable: false,
2023-07-31 01:46:58:       readableListening: false,
2023-07-31 01:46:58:       resumeScheduled: false,
2023-07-31 01:46:58:       errorEmitted: false,
2023-07-31 01:46:58:       emitClose: false,
2023-07-31 01:46:58:       autoDestroy: true,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       errored: null,
2023-07-31 01:46:58:       closed: false,
2023-07-31 01:46:58:       closeEmitted: false,
2023-07-31 01:46:58:       defaultEncoding: 'utf8',
2023-07-31 01:46:58:       awaitDrainWriters: null,
2023-07-31 01:46:58:       multiAwaitDrain: false,
2023-07-31 01:46:58:       readingMore: false,
2023-07-31 01:46:58:       dataEmitted: false,
2023-07-31 01:46:58:       decoder: null,
2023-07-31 01:46:58:       encoding: null,
2023-07-31 01:46:58:       [Symbol(kPaused)]: false
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _events: [Object: null prototype] {
2023-07-31 01:46:58:       end: [Array],
2023-07-31 01:46:58:       timeout: [Function: socketOnTimeout],
2023-07-31 01:46:58:       data: [Function: bound socketOnData],
2023-07-31 01:46:58:       error: [Function: socketOnError],
2023-07-31 01:46:58:       close: [Array],
2023-07-31 01:46:58:       drain: [Function: bound socketOnDrain],
2023-07-31 01:46:58:       resume: [Function: onSocketResume],
2023-07-31 01:46:58:       pause: [Function: onSocketPause]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _eventsCount: 8,
2023-07-31 01:46:58:     _maxListeners: undefined,
2023-07-31 01:46:58:     _writableState: WritableState {
2023-07-31 01:46:58:       objectMode: false,
2023-07-31 01:46:58:       highWaterMark: 16384,
2023-07-31 01:46:58:       finalCalled: false,
2023-07-31 01:46:58:       needDrain: false,
2023-07-31 01:46:58:       ending: false,
2023-07-31 01:46:58:       ended: false,
2023-07-31 01:46:58:       finished: false,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       decodeStrings: false,
2023-07-31 01:46:58:       defaultEncoding: 'utf8',
2023-07-31 01:46:58:       length: 0,
2023-07-31 01:46:58:       writing: false,
2023-07-31 01:46:58:       corked: 0,
2023-07-31 01:46:58:       sync: false,
2023-07-31 01:46:58:       bufferProcessing: false,
2023-07-31 01:46:58:       onwrite: [Function: bound onwrite],
2023-07-31 01:46:58:       writecb: null,
2023-07-31 01:46:58:       writelen: 0,
2023-07-31 01:46:58:       afterWriteTickInfo: null,
2023-07-31 01:46:58:       buffered: [],
2023-07-31 01:46:58:       bufferedIndex: 0,
2023-07-31 01:46:58:       allBuffers: true,
2023-07-31 01:46:58:       allNoop: true,
2023-07-31 01:46:58:       pendingcb: 0,
2023-07-31 01:46:58:       constructed: true,
2023-07-31 01:46:58:       prefinished: false,
2023-07-31 01:46:58:       errorEmitted: false,
2023-07-31 01:46:58:       emitClose: false,
2023-07-31 01:46:58:       autoDestroy: true,
2023-07-31 01:46:58:       errored: null,
2023-07-31 01:46:58:       closed: false,
2023-07-31 01:46:58:       closeEmitted: false,
2023-07-31 01:46:58:       [Symbol(kOnFinished)]: []
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     allowHalfOpen: true,
2023-07-31 01:46:58:     _sockname: null,
2023-07-31 01:46:58:     _pendingData: null,
2023-07-31 01:46:58:     _pendingEncoding: '',
2023-07-31 01:46:58:     server: Server {
2023-07-31 01:46:58:       maxHeaderSize: undefined,
2023-07-31 01:46:58:       insecureHTTPParser: undefined,
2023-07-31 01:46:58:       requestTimeout: 300000,
2023-07-31 01:46:58:       headersTimeout: 60000,
2023-07-31 01:46:58:       keepAliveTimeout: 5000,
2023-07-31 01:46:58:       connectionsCheckingInterval: 30000,
2023-07-31 01:46:58:       joinDuplicateHeaders: undefined,
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 2,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       _connections: 1,
2023-07-31 01:46:58:       _handle: [TCP],
2023-07-31 01:46:58:       _usingWorkers: false,
2023-07-31 01:46:58:       _workers: [],
2023-07-31 01:46:58:       _unref: false,
2023-07-31 01:46:58:       allowHalfOpen: true,
2023-07-31 01:46:58:       pauseOnConnect: false,
2023-07-31 01:46:58:       noDelay: true,
2023-07-31 01:46:58:       keepAlive: false,
2023-07-31 01:46:58:       keepAliveInitialDelay: 0,
2023-07-31 01:46:58:       httpAllowHalfOpen: false,
2023-07-31 01:46:58:       timeout: 0,
2023-07-31 01:46:58:       maxHeadersCount: null,
2023-07-31 01:46:58:       maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       _connectionKey: '6::::3000',
2023-07-31 01:46:58:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
2023-07-31 01:46:58:       [Symbol(ServerResponse)]: [Function: ServerResponse],
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(async_id_symbol)]: 33,
2023-07-31 01:46:58:       [Symbol(http.server.connections)]: ConnectionsList {},
2023-07-31 01:46:58:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
2023-07-31 01:46:58:         _idleTimeout: 30000,
2023-07-31 01:46:58:         _idlePrev: [TimersList],
2023-07-31 01:46:58:         _idleNext: [TimersList],
2023-07-31 01:46:58:         _idleStart: 937,
2023-07-31 01:46:58:         _onTimeout: [Function: bound checkConnections],
2023-07-31 01:46:58:         _timerArgs: undefined,
2023-07-31 01:46:58:         _repeat: 30000,
2023-07-31 01:46:58:         _destroyed: false,
2023-07-31 01:46:58:         [Symbol(refed)]: false,
2023-07-31 01:46:58:         [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:         [Symbol(asyncId)]: 32,
2023-07-31 01:46:58:         [Symbol(triggerId)]: 1
2023-07-31 01:46:58:       },
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _server: Server {
2023-07-31 01:46:58:       maxHeaderSize: undefined,
2023-07-31 01:46:58:       insecureHTTPParser: undefined,
2023-07-31 01:46:58:       requestTimeout: 300000,
2023-07-31 01:46:58:       headersTimeout: 60000,
2023-07-31 01:46:58:       keepAliveTimeout: 5000,
2023-07-31 01:46:58:       connectionsCheckingInterval: 30000,
2023-07-31 01:46:58:       joinDuplicateHeaders: undefined,
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 2,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       _connections: 1,
2023-07-31 01:46:58:       _handle: [TCP],
2023-07-31 01:46:58:       _usingWorkers: false,
2023-07-31 01:46:58:       _workers: [],
2023-07-31 01:46:58:       _unref: false,
2023-07-31 01:46:58:       allowHalfOpen: true,
2023-07-31 01:46:58:       pauseOnConnect: false,
2023-07-31 01:46:58:       noDelay: true,
2023-07-31 01:46:58:       keepAlive: false,
2023-07-31 01:46:58:       keepAliveInitialDelay: 0,
2023-07-31 01:46:58:       httpAllowHalfOpen: false,
2023-07-31 01:46:58:       timeout: 0,
2023-07-31 01:46:58:       maxHeadersCount: null,
2023-07-31 01:46:58:       maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       _connectionKey: '6::::3000',
2023-07-31 01:46:58:       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
2023-07-31 01:46:58:       [Symbol(ServerResponse)]: [Function: ServerResponse],
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(async_id_symbol)]: 33,
2023-07-31 01:46:58:       [Symbol(http.server.connections)]: ConnectionsList {},
2023-07-31 01:46:58:       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
2023-07-31 01:46:58:         _idleTimeout: 30000,
2023-07-31 01:46:58:         _idlePrev: [TimersList],
2023-07-31 01:46:58:         _idleNext: [TimersList],
2023-07-31 01:46:58:         _idleStart: 937,
2023-07-31 01:46:58:         _onTimeout: [Function: bound checkConnections],
2023-07-31 01:46:58:         _timerArgs: undefined,
2023-07-31 01:46:58:         _repeat: 30000,
2023-07-31 01:46:58:         _destroyed: false,
2023-07-31 01:46:58:         [Symbol(refed)]: false,
2023-07-31 01:46:58:         [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:         [Symbol(asyncId)]: 32,
2023-07-31 01:46:58:         [Symbol(triggerId)]: 1
2023-07-31 01:46:58:       },
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     parser: HTTPParser {
2023-07-31 01:46:58:       '0': null,
2023-07-31 01:46:58:       '1': [Function: parserOnHeaders],
2023-07-31 01:46:58:       '2': [Function: parserOnHeadersComplete],
2023-07-31 01:46:58:       '3': [Function: parserOnBody],
2023-07-31 01:46:58:       '4': [Function: parserOnMessageComplete],
2023-07-31 01:46:58:       '5': [Function: bound onParserExecute],
2023-07-31 01:46:58:       '6': [Function: bound onParserTimeout],
2023-07-31 01:46:58:       _headers: [],
2023-07-31 01:46:58:       _url: '',
2023-07-31 01:46:58:       socket: [Circular *1],
2023-07-31 01:46:58:       incoming: [Circular *2],
2023-07-31 01:46:58:       outgoing: null,
2023-07-31 01:46:58:       maxHeaderPairs: 2000,
2023-07-31 01:46:58:       _consumed: true,
2023-07-31 01:46:58:       onIncoming: [Function: bound parserOnIncoming],
2023-07-31 01:46:58:       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     on: [Function: socketListenerWrap],
2023-07-31 01:46:58:     addListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:     prependListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:     setEncoding: [Function: socketSetEncoding],
2023-07-31 01:46:58:     _paused: false,
2023-07-31 01:46:58:     _httpMessage: ServerResponse {
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 1,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       outputData: [],
2023-07-31 01:46:58:       outputSize: 0,
2023-07-31 01:46:58:       writable: true,
2023-07-31 01:46:58:       destroyed: false,
2023-07-31 01:46:58:       _last: false,
2023-07-31 01:46:58:       chunkedEncoding: false,
2023-07-31 01:46:58:       shouldKeepAlive: true,
2023-07-31 01:46:58:       maxRequestsOnConnectionReached: false,
2023-07-31 01:46:58:       _defaultKeepAlive: true,
2023-07-31 01:46:58:       useChunkedEncodingByDefault: true,
2023-07-31 01:46:58:       sendDate: true,
2023-07-31 01:46:58:       _removedConnection: false,
2023-07-31 01:46:58:       _removedContLen: false,
2023-07-31 01:46:58:       _removedTE: false,
2023-07-31 01:46:58:       strictContentLength: false,
2023-07-31 01:46:58:       _contentLength: null,
2023-07-31 01:46:58:       _hasBody: true,
2023-07-31 01:46:58:       _trailer: '',
2023-07-31 01:46:58:       finished: false,
2023-07-31 01:46:58:       _headerSent: false,
2023-07-31 01:46:58:       _closed: false,
2023-07-31 01:46:58:       socket: [Circular *1],
2023-07-31 01:46:58:       _header: null,
2023-07-31 01:46:58:       _keepAliveTimeout: 5000,
2023-07-31 01:46:58:       _onPendingData: [Function: bound updateOutgoingData],
2023-07-31 01:46:58:       req: [Circular *2],
2023-07-31 01:46:58:       _sent100: false,
2023-07-31 01:46:58:       _expect_continue: false,
2023-07-31 01:46:58:       _maxRequestsPerSocket: 0,
2023-07-31 01:46:58:       locals: [Object: null prototype] {},
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(kBytesWritten)]: 0,
2023-07-31 01:46:58:       [Symbol(kNeedDrain)]: false,
2023-07-31 01:46:58:       [Symbol(corked)]: 0,
2023-07-31 01:46:58:       [Symbol(kOutHeaders)]: [Object: null prototype],
2023-07-31 01:46:58:       [Symbol(errored)]: null,
2023-07-31 01:46:58:       [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     timeout: 0,
2023-07-31 01:46:58:     [Symbol(async_id_symbol)]: 45,
2023-07-31 01:46:58:     [Symbol(kHandle)]: TCP {
2023-07-31 01:46:58:       reading: true,
2023-07-31 01:46:58:       onconnection: null,
2023-07-31 01:46:58:       _consumed: true,
2023-07-31 01:46:58:       [Symbol(owner_symbol)]: [Circular *1]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     [Symbol(lastWriteQueueSize)]: 0,
2023-07-31 01:46:58:     [Symbol(timeout)]: Timeout {
2023-07-31 01:46:58:       _idleTimeout: -1,
2023-07-31 01:46:58:       _idlePrev: null,
2023-07-31 01:46:58:       _idleNext: null,
2023-07-31 01:46:58:       _idleStart: 4232,
2023-07-31 01:46:58:       _onTimeout: null,
2023-07-31 01:46:58:       _timerArgs: undefined,
2023-07-31 01:46:58:       _repeat: null,
2023-07-31 01:46:58:       _destroyed: true,
2023-07-31 01:46:58:       [Symbol(refed)]: false,
2023-07-31 01:46:58:       [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:       [Symbol(asyncId)]: 71,
2023-07-31 01:46:58:       [Symbol(triggerId)]: 68
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     [Symbol(kBuffer)]: null,
2023-07-31 01:46:58:     [Symbol(kBufferCb)]: null,
2023-07-31 01:46:58:     [Symbol(kBufferGen)]: null,
2023-07-31 01:46:58:     [Symbol(kCapture)]: false,
2023-07-31 01:46:58:     [Symbol(kSetNoDelay)]: true,
2023-07-31 01:46:58:     [Symbol(kSetKeepAlive)]: false,
2023-07-31 01:46:58:     [Symbol(kSetKeepAliveInitialDelay)]: 0,
2023-07-31 01:46:58:     [Symbol(kBytesRead)]: 0,
2023-07-31 01:46:58:     [Symbol(kBytesWritten)]: 0
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   _consuming: false,
2023-07-31 01:46:58:   _dumped: false,
2023-07-31 01:46:58:   next: [Function: next],
2023-07-31 01:46:58:   baseUrl: '',
2023-07-31 01:46:58:   originalUrl: '/protected',
2023-07-31 01:46:58:   _parsedUrl: Url {
2023-07-31 01:46:58:     protocol: null,
2023-07-31 01:46:58:     slashes: null,
2023-07-31 01:46:58:     auth: null,
2023-07-31 01:46:58:     host: null,
2023-07-31 01:46:58:     port: null,
2023-07-31 01:46:58:     hostname: null,
2023-07-31 01:46:58:     hash: null,
2023-07-31 01:46:58:     search: null,
2023-07-31 01:46:58:     query: null,
2023-07-31 01:46:58:     pathname: '/protected',
2023-07-31 01:46:58:     path: '/protected',
2023-07-31 01:46:58:     href: '/protected',
2023-07-31 01:46:58:     _raw: '/protected'
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   params: {},
2023-07-31 01:46:58:   query: {},
2023-07-31 01:46:58:   res: <ref *3> ServerResponse {
2023-07-31 01:46:58:     _events: [Object: null prototype] { finish: [Array] },
2023-07-31 01:46:58:     _eventsCount: 1,
2023-07-31 01:46:58:     _maxListeners: undefined,
2023-07-31 01:46:58:     outputData: [],
2023-07-31 01:46:58:     outputSize: 0,
2023-07-31 01:46:58:     writable: true,
2023-07-31 01:46:58:     destroyed: false,
2023-07-31 01:46:58:     _last: false,
2023-07-31 01:46:58:     chunkedEncoding: false,
2023-07-31 01:46:58:     shouldKeepAlive: true,
2023-07-31 01:46:58:     maxRequestsOnConnectionReached: false,
2023-07-31 01:46:58:     _defaultKeepAlive: true,
2023-07-31 01:46:58:     useChunkedEncodingByDefault: true,
2023-07-31 01:46:58:     sendDate: true,
2023-07-31 01:46:58:     _removedConnection: false,
2023-07-31 01:46:58:     _removedContLen: false,
2023-07-31 01:46:58:     _removedTE: false,
2023-07-31 01:46:58:     strictContentLength: false,
2023-07-31 01:46:58:     _contentLength: null,
2023-07-31 01:46:58:     _hasBody: true,
2023-07-31 01:46:58:     _trailer: '',
2023-07-31 01:46:58:     finished: false,
2023-07-31 01:46:58:     _headerSent: false,
2023-07-31 01:46:58:     _closed: false,
2023-07-31 01:46:58:     socket: <ref *1> Socket {
2023-07-31 01:46:58:       connecting: false,
2023-07-31 01:46:58:       _hadError: false,
2023-07-31 01:46:58:       _parent: null,
2023-07-31 01:46:58:       _host: null,
2023-07-31 01:46:58:       _closeAfterHandlingError: false,
2023-07-31 01:46:58:       _readableState: [ReadableState],
2023-07-31 01:46:58:       _events: [Object: null prototype],
2023-07-31 01:46:58:       _eventsCount: 8,
2023-07-31 01:46:58:       _maxListeners: undefined,
2023-07-31 01:46:58:       _writableState: [WritableState],
2023-07-31 01:46:58:       allowHalfOpen: true,
2023-07-31 01:46:58:       _sockname: null,
2023-07-31 01:46:58:       _pendingData: null,
2023-07-31 01:46:58:       _pendingEncoding: '',
2023-07-31 01:46:58:       server: [Server],
2023-07-31 01:46:58:       _server: [Server],
2023-07-31 01:46:58:       parser: [HTTPParser],
2023-07-31 01:46:58:       on: [Function: socketListenerWrap],
2023-07-31 01:46:58:       addListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:       prependListener: [Function: socketListenerWrap],
2023-07-31 01:46:58:       setEncoding: [Function: socketSetEncoding],
2023-07-31 01:46:58:       _paused: false,
2023-07-31 01:46:58:       _httpMessage: [Circular *3],
2023-07-31 01:46:58:       timeout: 0,
2023-07-31 01:46:58:       [Symbol(async_id_symbol)]: 45,
2023-07-31 01:46:58:       [Symbol(kHandle)]: [TCP],
2023-07-31 01:46:58:       [Symbol(lastWriteQueueSize)]: 0,
2023-07-31 01:46:58:       [Symbol(timeout)]: Timeout {
2023-07-31 01:46:58:         _idleTimeout: -1,
2023-07-31 01:46:58:         _idlePrev: null,
2023-07-31 01:46:58:         _idleNext: null,
2023-07-31 01:46:58:         _idleStart: 4232,
2023-07-31 01:46:58:         _onTimeout: null,
2023-07-31 01:46:58:         _timerArgs: undefined,
2023-07-31 01:46:58:         _repeat: null,
2023-07-31 01:46:58:         _destroyed: true,
2023-07-31 01:46:58:         [Symbol(refed)]: false,
2023-07-31 01:46:58:         [Symbol(kHasPrimitive)]: false,
2023-07-31 01:46:58:         [Symbol(asyncId)]: 71,
2023-07-31 01:46:58:         [Symbol(triggerId)]: 68
2023-07-31 01:46:58:       },
2023-07-31 01:46:58:       [Symbol(kBuffer)]: null,
2023-07-31 01:46:58:       [Symbol(kBufferCb)]: null,
2023-07-31 01:46:58:       [Symbol(kBufferGen)]: null,
2023-07-31 01:46:58:       [Symbol(kCapture)]: false,
2023-07-31 01:46:58:       [Symbol(kSetNoDelay)]: true,
2023-07-31 01:46:58:       [Symbol(kSetKeepAlive)]: false,
2023-07-31 01:46:58:       [Symbol(kSetKeepAliveInitialDelay)]: 0,
2023-07-31 01:46:58:       [Symbol(kBytesRead)]: 0,
2023-07-31 01:46:58:       [Symbol(kBytesWritten)]: 0
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     _header: null,
2023-07-31 01:46:58:     _keepAliveTimeout: 5000,
2023-07-31 01:46:58:     _onPendingData: [Function: bound updateOutgoingData],
2023-07-31 01:46:58:     req: [Circular *2],
2023-07-31 01:46:58:     _sent100: false,
2023-07-31 01:46:58:     _expect_continue: false,
2023-07-31 01:46:58:     _maxRequestsPerSocket: 0,
2023-07-31 01:46:58:     locals: [Object: null prototype] {},
2023-07-31 01:46:58:     [Symbol(kCapture)]: false,
2023-07-31 01:46:58:     [Symbol(kBytesWritten)]: 0,
2023-07-31 01:46:58:     [Symbol(kNeedDrain)]: false,
2023-07-31 01:46:58:     [Symbol(corked)]: 0,
2023-07-31 01:46:58:     [Symbol(kOutHeaders)]: [Object: null prototype] {
2023-07-31 01:46:58:       'x-powered-by': [Array],
2023-07-31 01:46:58:       'access-control-allow-origin': [Array]
2023-07-31 01:46:58:     },
2023-07-31 01:46:58:     [Symbol(errored)]: null,
2023-07-31 01:46:58:     [Symbol(kUniqueHeaders)]: null
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   secret: undefined,
2023-07-31 01:46:58:   cookies: [Object: null prototype] {},
2023-07-31 01:46:58:   signedCookies: [Object: null prototype] {},
2023-07-31 01:46:58:   body: {},
2023-07-31 01:46:58:   route: Route {
2023-07-31 01:46:58:     path: '/protected',
2023-07-31 01:46:58:     stack: [ [Layer] ],
2023-07-31 01:46:58:     methods: { get: true }
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   [Symbol(kCapture)]: false,
2023-07-31 01:46:58:   [Symbol(kHeaders)]: {
2023-07-31 01:46:58:     host: 'localhost:3000',
2023-07-31 01:46:58:     connection: 'keep-alive',
2023-07-31 01:46:58:     'sec-ch-ua': '"Not.A/Brand";v="8", "Chromium";v="114", "Opera";v="100"',
2023-07-31 01:46:58:     accept: 'application/json, text/plain, */*',
2023-07-31 01:46:58:     'sec-ch-ua-mobile': '?0',
2023-07-31 01:46:58:     'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36 OPR/100.0.0.0',
2023-07-31 01:46:58:     'sec-ch-ua-platform': '"Windows"',
2023-07-31 01:46:58:     origin: 'http://localhost:3001',
2023-07-31 01:46:58:     'sec-fetch-site': 'same-site',
2023-07-31 01:46:58:     'sec-fetch-mode': 'cors',
2023-07-31 01:46:58:     'sec-fetch-dest': 'empty',
2023-07-31 01:46:58:     referer: 'http://localhost:3001/',
2023-07-31 01:46:58:     'accept-encoding': 'gzip, deflate, br',
2023-07-31 01:46:58:     'accept-language': 'en-US,en;q=0.9'
2023-07-31 01:46:58:   },
2023-07-31 01:46:58:   [Symbol(kHeadersCount)]: 28,
2023-07-31 01:46:58:   [Symbol(kTrailers)]: null,
2023-07-31 01:46:58:   [Symbol(kTrailersCount)]: 0
2023-07-31 01:46:58: }
2023-07-31 01:52:16: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:16: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzUzNn0.Gd1abm2PdI3icuQiSL-tO2EHVtUYsHEoiwKnlbJK2YQ
2023-07-31 01:52:18: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:18: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzUzOH0.HjviSazdd3rsxHHrp2k2nAV1_XxG_NQVDx4QuI_WWXU
2023-07-31 01:52:21: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:21: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU0MX0.Slk38KtdyNxQorU85zBzR1G4BQBjn29jAlMbQOHAGRg
2023-07-31 01:52:26: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:26: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU0Nn0.KVz1qWC-TFy78gNUQ7CiKktg240bFm6fkl5lCtbhJW8
2023-07-31 01:52:41: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:41: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU2MX0.1btfcZrfWzNMX3rVOa5Uw27RVlk6i9bKfFk1c9MGfPA
2023-07-31 01:52:42: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:42: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU2Mn0.F-LPhxyNwD9ZmNx21w6x4hD1qzV7UTfBewPGbmMakvg
2023-07-31 01:52:47: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:47: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU2N30.speWp9_Ku2-qHDwQJ_irKBiQ5Uc6H6QumKuWE4VqFqg
2023-07-31 01:52:49: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:52:49: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU2OX0.PuilD7BsTSq3GDgiJbDrutOzxRso-M4A5_LHboaCYcU
2023-07-31 01:53:19: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:53:19: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzU5OX0.mg-GlzNbo2calNRZHl-L1LG3yhNymAeuJDTT2VNH5pA
2023-07-31 01:53:27: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:53:27: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzYwN30.BvOA8p5UEwE_qJwXVO_QFA9g8HghjmPKVfrqc0k_Ltg
2023-07-31 01:53:53: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:53:53: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzYzM30.Hdzwt2Vbu-WTt7b-mCzvwZELM9RmDFyTa2OjD74lN3g
2023-07-31 01:54:53: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:54:53: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzY5M30.i_Sh_Rq7iuZ9nvBIJ3KfBrzwGo3rkWMiiCL-ssyPahg
2023-07-31 01:54:59: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:54:59: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzY5OX0.06VHy6gGaIgmsd2oL0FkKbpQC5oCO_j6ZFrHgzdowmo
2023-07-31 01:55:01: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:55:01: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzcwMX0.cIyP3nUJRTRO89aPvRXEYcK3iU9--at49W74tmrWR9k
2023-07-31 01:55:04: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:55:04: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzcwNH0.muqyN5JLXR7sxROOVVUKFWN9uk5p2hBJBty8HWF-lj4
2023-07-31 01:55:10: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:55:10: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzcxMH0.sqHhWQY7ZeyU49waOAyINOFIbrXepLzEvEsZWQMoRgo
2023-07-31 01:55:29: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:55:29: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzcyOX0.io0e0SIBIhtFE3rQ-ZUMUv8Nq-bO_SQhtG2fMYYxOPA
2023-07-31 01:55:32: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 01:55:32: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDc1NzczMn0.Uq2b7SdUzAsOdgRmAixH9jJMpTXHOnp1s5A-1ISmAIs
2023-07-31 15:30:15: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:30:15: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjYxNX0.6FoFZ6S2WQ5EqYjhivBVlSwZ9p35xyAxCfEIEyMq44A
2023-07-31 15:32:45: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:32:45: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjc2NX0.J6_K-VBVZNbvmrgOVLWRElbxbKX8PktWxfxL0zgstiU
2023-07-31 15:32:56: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:32:56: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjc3Nn0.NVTSqkEDNm4Yj6q5lxFB_IlqETOYIubmxlBTX7HEKrg
2023-07-31 15:32:58: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:32:58: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjc3OH0.x9tplwstwM9rvlN4ehsBBqd_5GG4dnRNs083jYR0LHU
2023-07-31 15:33:32: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:33:32: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjgxMn0.zwAakq2-LD9HhQFAISSp5pdNvDsdegVrkvf3h9vbGm0
2023-07-31 15:33:34: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:33:34: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjgxNH0.NmHOdupNBFHryd78gv-rfKi8jJ--TAhtTmgezChctec
2023-07-31 15:33:51: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:33:51: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjgzMX0.9l4QhfUAxp3xIuAbd4Xsb_8nDIZX5ZTHE_8JM6qBDFs
2023-07-31 15:33:55: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:33:55: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjgzNX0.vek0QiYGMQGNlQiDxLClDL-X0oKr03XtmTYEKaRMDWs
2023-07-31 15:33:57: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:33:57: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjgzN30.-zYr63Ua4Z9PGHDIwQZUJqjVeVQIN0q40mZ9r6ognxo
2023-07-31 15:34:10: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:34:10: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjg1MH0.xn9YFBqL8MEwvSwoNymzM-uLsWaVWeR4-FtI34YPyeU
2023-07-31 15:34:14: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:34:14: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjg1NH0.PXlRUx_VQ_ZDwIuNwmBh68g3t_CE5i3A5ULw3zIBHN4
2023-07-31 15:34:55: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:34:55: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjg5NX0.R24fSual5yKQORnVHolzMZAdAGgco9XDeln-UoFNEfk
2023-07-31 15:35:18: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:35:18: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjkxOH0.FLevlOs7YqDX8cLJfms8MRI-DkyY7F8QX2eeSWuY37Q
2023-07-31 15:35:21: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:35:21: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNjkyMX0.wylWx5vYAcq0s1Ro9oMZfjyRGgYBX5jg33O7b5dTl7k
2023-07-31 15:41:57: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:41:57: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzMxN30.RbE0EYo7tf6--CIVddjHzbJvLKCqTCRH0lbmEA1LXXY
2023-07-31 15:42:00: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:42:00: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzMyMH0.DzIUcLszukAcWpl8geUgY5Ggn5okd1n4bPu4VnIzxMM
2023-07-31 15:43:50: Closing all connections...
2023-07-31 15:43:54: notAnEndPoint029
2023-07-31 15:43:54: Server is running on http://localhost:3000
2023-07-31 15:44:28: Closing all connections...
2023-07-31 15:44:29: notAnEndPoint029
2023-07-31 15:44:29: Server is running on http://localhost:3000
2023-07-31 15:46:24: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:46:24: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzU4NH0.hOctUayHcXq_9efKUjov-YiaEMQuUS3jx4I-e4KPpCw
2023-07-31 15:47:14: Closing all connections...
2023-07-31 15:47:15: notAnEndPoint029
2023-07-31 15:47:15: Server is running on http://localhost:3000
2023-07-31 15:47:15: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:47:15: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzYzNX0.erb8P_YoZRLdeb1yLVwFQC6nAGtyf96aa7NC3vhRBtI
2023-07-31 15:47:41: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:47:41: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzY2MX0.kEtgXJ5T7cP9UiuO2ieB_HwVW-p8746kQ-ise1g1i-c
2023-07-31 15:47:46: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:47:46: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzY2Nn0.m7bMHzFCPNkqz1aJ9Iwwotyefi0g3ZX8obydcyjcqHQ
2023-07-31 15:48:03: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:48:03: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzY4M30.2K-CU6VIlSlhyF21wkTIA3bIRosdi-usUQvt3tQTDvY
2023-07-31 15:48:33: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:48:33: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzcxM30.2GEWcmiiWe65KjUdi1Wjnwmb89wKijjpDrWiltmwg9M
2023-07-31 15:50:06: Closing all connections...
2023-07-31 15:50:07: notAnEndPoint029
2023-07-31 15:50:07: Server is running on http://localhost:3000
2023-07-31 15:50:10: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 15:50:10: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgwNzgxMH0.VQl663Z48jQjTO1WEgOBMnYOrAUhnRMZd_UScYhrF5w
2023-07-31 17:02:21: Closing all connections...
2023-07-31 17:02:22: notAnEndPoint029
2023-07-31 17:02:22: Server is running on http://localhost:3000
2023-07-31 17:02:26: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 17:02:26: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgxMjE0Nn0.zB7_gY5yxpOtnlYZ_upHfVncTu95W5xsXNpUV2DzVyk
2023-07-31 17:02:28: [Object: null prototype] {}
2023-07-31 22:17:00: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 22:17:00: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgzMTAyMH0.6TWmyvLO7VSASMROq9vM7bceoWmQDP9WppKIlbQ9fik
2023-07-31 22:17:00: [Object: null prototype] {}
2023-07-31 22:17:24: [Object: null prototype] {}
2023-07-31 22:19:11: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 22:19:11: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgzMTE1MX0.3W-_fQAGPhC0GLVDChty7fpRvpdzs5E1Mwlwbtwwkic
2023-07-31 22:19:12: [Object: null prototype] {}
2023-07-31 22:19:33: [Object: null prototype] {}
2023-07-31 22:19:34: [Object: null prototype] {}
2023-07-31 22:19:35: [Object: null prototype] {}
2023-07-31 22:19:35: [Object: null prototype] {}
2023-07-31 22:19:35: [Object: null prototype] {}
2023-07-31 22:20:31: Closing all connections...
2023-07-31 22:20:37: notAnEndPoint029
2023-07-31 22:20:37: Server is running on http://localhost:3000
2023-07-31 22:20:38: Ty2LCURIIMGbs3p1dyJLlA==
2023-07-31 22:20:38: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IlR5MkxDVVJJSU1HYnMzcDFkeUpMbEE9PSIsImlhdCI6MTY5MDgzMTIzOH0.-MxDbWHLnAhOvRr3LBfQRdlwn9c-cFs9boeX_0B5-E0
2023-07-31 22:20:47: [Object: null prototype] {}
2023-07-31 22:20:47: no data :(
